{"version":3,"file":"context-provider-element.js","sourceRoot":"","sources":["../src/context-provider-element.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAE7C,OAAO,EAAE,eAAe,EAAE,MAAM,oBAAoB,CAAC;AAErD,MAAM,OAAO,sBAAuB,SAAQ,UAAU;IAIpD,IAAW,KAAK,CAAC,KAAU;QACzB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAc,CAAC;SACrC;IACH,CAAC;IAKD,IAAW,IAAI,CAAC,KAAa;QAC3B,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,IAAI,CAAC,OAAO,GAAG,IAAI,eAAe,CAAC,IAAI,EAAE,KAAc,CAAC,CAAC;YACzD,IAAI,IAAI,CAAC,UAAU,EAAE;gBACnB,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,UAAmB,CAAC;aAC/C;SACF;aAAM;YACL,MAAM,IAAI,KAAK,CAAC,kDAAkD,CAAC,CAAC;SACrE;IACH,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAA,eAAe,CAAC;IAC7B,CAAC;;AAED,oDAAoD;AAC7C,6BAAM,GAAG,GAAG,CAAA;;;;GAIlB,CAAC;AA9BF;IADC,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;mDAM9B;AAKD;IADC,QAAQ,EAAE;kDAUV","sourcesContent":["import { css, html, LitElement } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { ContextTypeMap } from './context-event';\nimport { ContextProvider } from './context-provider';\n\nexport class ContextProviderElement extends LitElement {\n  private localValue?: any;\n\n  @property({ attribute: false })\n  public set value(value: any) {\n    this.localValue = value;\n    if (this.context) {\n      this.context.value = value as never;\n    }\n  }\n\n  private context?: ContextProvider<never>;\n\n  @property()\n  public set name(value: string) {\n    if (!this.context) {\n      this.context = new ContextProvider(this, value as never);\n      if (this.localValue) {\n        this.context.value = this.localValue as never;\n      }\n    } else {\n      throw new Error('Can only set context provider element name once!');\n    }\n  }\n\n  render() {\n    return html`<slot></slot>`;\n  }\n\n  // Don't interfere with the html of the element tree\n  static styles = css`\n    :host {\n      display: contents;\n    }\n  `;\n}\n"]}